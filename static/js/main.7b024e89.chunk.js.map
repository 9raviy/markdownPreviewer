{"version":3,"sources":["App.js","index.js"],"names":["App","props","handleChange","bind","state","input","e","this","setState","target","value","render","marked","Renderer","className","id","placeholder","onChange","dangerouslySetInnerHTML","__html","renderer","React","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"uOA8CeA,E,kDAvCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKC,MAAO,CACVC,MAPc,iqCAGA,E,yDAQLC,GACZC,KAAKC,SACH,CAACH,MAAMC,EAAEG,OAAOC,U,+BAIjB,IAAMC,EAAO,IAAIC,IAAOC,SAC1B,OACE,sBAAKC,UAAU,MAAf,UAEI,iCACI,uEAEF,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SAA6B,0CAC7B,qBAAKA,UAAU,gBAAf,SACA,0BAAUC,GAAG,SAASC,YAAY,qBAAqBN,MAAOH,KAAKH,MAAMC,MAAOY,SAAUV,KAAKL,oBAGnG,sBAAKY,UAAU,OAAf,UACI,qBAAKA,UAAU,eAAf,SAA8B,sDAC9B,qBAAKA,UAAU,iBAAf,SACA,qBAAKC,GAAG,UAAUC,YAAY,yBAAyBE,wBAAyB,CAACC,OAAOP,IAAOL,KAAKH,MAAMC,MAAM,CAACe,SAAST,sB,GAhCxHU,IAAMC,WCFxBC,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b024e89.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\nimport marked from 'marked'\n\nconst placeholder=  \"# React Markdown Previewer!\\n\\n## This is a sub-heading...\\n### And here's some other cool stuff:\\n  \\nHeres some code, `<div></div>`, between 2 backticks.\\n\\n```\\n// this is multi-line code:\\n\\nfunction anotherExample(firstLine, lastLine) {\\n  if (firstLine == '```' && lastLine == '```') {\\n    return multiLineCode;\\n  }\\n}\\n```\\n  \\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\n\\nThere's also [links](https://www.freecodecamp.com), and\\n> Block Quotes!\\n\\nAnd if you want to get really crazy, even tables:\\n\\nWild Header | Crazy Header | Another Header?\\n------------ | ------------- | ------------- \\nYour content can | be here, and it | can be here....\\nAnd here. | Okay. | I think we get it.\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n     - With different indentation levels.\\n        - That look like this.\\n\\n\\n1. And there are numbererd lists too.\\n1. Use just 1s if you want! \\n1. But the list goes on...\\n- Even if you use dashes or asterisks.\\n* And last but not least, let's not forget embedded images:\\n\\n![React Logo w/ Text](https://goo.gl/Umyytc)\\n\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleChange=this.handleChange.bind(this);\n    this.state=({\n      input:placeholder\n    })\n  }\n\n  handleChange(e){\n   this.setState(\n     {input:e.target.value })\n  }\n\n  render(){\n    const render=new marked.Renderer();\n  return (\n    <div className=\"App\">\n\n        <header>\n            <h2>Welcome to React MarkDown Previewer</h2> \n        </header>\n          <div className=\"top-container\">\n            <div className=\"box1\">\n                <div className=\"editorTitle\"><h3>Editor</h3></div> \n                <div className=\"editorContent\">\n                <textarea id=\"editor\" placeholder=\"Enter element here\" value={this.state.input} onChange={this.handleChange}></textarea>\n                </div>\n            </div>\n            <div className=\"box2\">\n                <div className=\"previewTitle\"><h3>Markdown Previewer</h3></div> \n                <div className=\"previewContent\">\n                <div id=\"preview\" placeholder=\"Preview generated here\" dangerouslySetInnerHTML={{__html:marked(this.state.input,{renderer:render})}} ></div>\n                </div>\n            </div>\n    </div>\n    </div>\n  )}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}